#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<math.h>
#include<complex.h>

int main()
{
	float a, b, c, d;
	printf("请输入方程ax^3+bx^2+cx+d=0中a,b,c,d四个参数以求解：");
	scanf("%f %f %f %f",&a,&b,&c,&d);

	if (a == 0 && b == 0 && c == 0) {
		printf("错误！请重新输入参数！");
		return 1;
	}

	double x, x1, x2, x3;
	double delta = 0;
	double e = sqrt(3) / 2;
	double o = -1 / 2;
	double_Complex W = o + e * I;

	if (a == 0 && b == 0 && c != 0) {
		x = -d / c;
		printf("该方程的解为：%g",x);
	}

	if (a == 0 && b != 0 && c != 0) {

		delta = pow(b, 2) - 4 * a * c;

		if (delta < 0) {
			printf("该方程无实数解！");
		}

		if (delta = 0) {
			x = ((-b) + sqrt(delta)) / (2 * a);
			printf("该方程有两个相等的实数解：%g",x);
		}

		else {
			x1 = ((-b) + sqrt(delta)) / (2 * a);
			x2 = ((-b) - sqrt(delta)) / (2 * a);
			printf("该方程的两个解分别为：x1 = %g , x2 = %g",x1,x2);
		}
	}

	

	else {
		double p = 0,
			q = 0,
			m = 0,
			n = 0;

		p = (3 * a * c - pow(b, 2)) / (3 * pow(a, 2));
		q = (2 * pow(b, 3) - 9 * a * b * c + 27 * pow(a, 2) * d) / (27 * pow(a, 3));
		m = q / 2;
		n = p / 3;
		delta = pow(m, 2) + pow(n, 3);

		if (delta > 0) {
		
		}
	}
	return 0;
}
